name: Verify that setting secret works

on:
  push:
    branches:
      - main

jobs:
  job0_update_secret_test:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Get repository files - probably do not need it
        uses: actions/checkout@v2
        
      - name: Assign a new value to the secret
        uses: actions/github-script@v6
        env:
          MY_TEST_SECRET: '${{ secrets.MY_TEST_SECRET }}'
        with:
          github-token: ${{ secrets.REPOB_V0_test }}
          script: |
            // const secret_name = 'MY_TEST_SECRET';
            // OR
            const { MY_TEST_SECRET } = process.env;
            const secret_name = `${MY_TEST_SECRET}`;
            
            // Get id information about repository secret
            const publicKey_str = await github.rest.actions.getRepoPublicKey({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            // Normally one would encrypt the token, but assign a text value to test
            
            // Check if libsodium is ready and then proceed.
            // sodium.ready.then(() => {
              // Convert the secret and key to a Uint8Array.
              // let binkey = sodium.from_base64(publicKey_str, sodium.base64_variants.ORIGINAL)
             //  let binsec = sodium.from_string(secret_name)
            
              // Encrypt the secret using libsodium
              // let encBytes = sodium.crypto_box_seal(binsec, binkey)
            
              // Convert the encrypted Uint8Array to Base64
              // let encryptedToken_base64 = sodium.to_base64(encBytes, sodium.base64_variants.ORIGINAL)
            
              // Print the output
              // console.log(output);
              // });
              
            // OR
            
            const encryptedToken = btoa("new value HERE");

            // Re-assign the new_secret_value to the repository secret
            await github.rest.actions.createOrUpdateRepoSecret({
                owner: context.repo.owner,
                repo: context.repo.repo,
                secret_name: secret_name,
                encrypted_value: encryptedToken,
                key_id: publicKey_str.data.key_id,
              });

  job1_read_secret_test:
    needs: job0_update_secret_test
    runs-on: ubuntu-latest
    
    steps:
      - name: Test if a new_secret_value was created
        uses: actions/github-script@v6
        env:
          MY_TEST_SECRET: '${{ secrets.MY_TEST_SECRET }}'
        with:
          github-token: ${{ secrets.REPOB_V0_test }}
          script: |
            const { MY_TEST_SECRET } = process.env;
            const secret_name = `${MY_TEST_SECRET}`;
            console.log("Verify that new value was set:", secret_name);
