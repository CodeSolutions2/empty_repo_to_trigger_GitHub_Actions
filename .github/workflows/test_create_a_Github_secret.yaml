name: Verify that setting secret works with a string

on:
  push:
    branches:
      - main

jobs:
  job0_update_secret_test:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Get repository files - probably do not need it
        uses: actions/checkout@v2
        
      - name: Assign a new value to the secret
        uses: actions/github-script@v6
        env:
          MY_TEST_SECRET: '${{ secrets.MY_TEST_SECRET }}'
        with:
          result-encoding: string
          github-token: ${{ secrets.REPOB_V0_test }}
          script: |
            const secret_name = 'MY_TEST_SECRET';
            
            // Get id information about repository secret
            const publicKey_str = await github.rest.actions.getRepoPublicKey({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            // Test a string output
            const encryptedToken = btoa("new value HERE");

            // Re-assign the new_secret_value to the repository secret
            await github.rest.actions.createOrUpdateRepoSecret({
                owner: context.repo.owner,
                repo: context.repo.repo,
                secret_name: secret_name,
                encrypted_value: encryptedToken,
                key_id: publicKey_str.data.key_id,
              });

  job1_read_secret_test:
    needs: job0_update_secret_test
    runs-on: ubuntu-latest
    
    steps:
      - name: Test if a new_secret_value was created
        uses: actions/github-script@v6
        env:
          MY_TEST_SECRET: '${{ secrets.MY_TEST_SECRET }}'
        with:
          github-token: ${{ secrets.REPOB_V0_test }}
          script: |
            let MY_TEST_SECRET = process.env.MY_TEST_SECRET;
            MY_TEST_SECRET = `${MY_TEST_SECRET}`;

            if (MY_TEST_SECRET == 'something') {
              console.log('same value that I manually entered');
            } else {
              console.log('value has been changed');
            }
